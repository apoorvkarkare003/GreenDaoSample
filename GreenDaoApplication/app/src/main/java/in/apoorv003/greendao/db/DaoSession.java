package in.apoorv003.greendao.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import in.apoorv003.greendao.db.Movie;
import in.apoorv003.greendao.db.Director;
import in.apoorv003.greendao.db.Actor;
import in.apoorv003.greendao.db.ProductionHouse;

import in.apoorv003.greendao.db.MovieDao;
import in.apoorv003.greendao.db.DirectorDao;
import in.apoorv003.greendao.db.ActorDao;
import in.apoorv003.greendao.db.ProductionHouseDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig movieDaoConfig;
    private final DaoConfig directorDaoConfig;
    private final DaoConfig actorDaoConfig;
    private final DaoConfig productionHouseDaoConfig;

    private final MovieDao movieDao;
    private final DirectorDao directorDao;
    private final ActorDao actorDao;
    private final ProductionHouseDao productionHouseDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        movieDaoConfig = daoConfigMap.get(MovieDao.class).clone();
        movieDaoConfig.initIdentityScope(type);

        directorDaoConfig = daoConfigMap.get(DirectorDao.class).clone();
        directorDaoConfig.initIdentityScope(type);

        actorDaoConfig = daoConfigMap.get(ActorDao.class).clone();
        actorDaoConfig.initIdentityScope(type);

        productionHouseDaoConfig = daoConfigMap.get(ProductionHouseDao.class).clone();
        productionHouseDaoConfig.initIdentityScope(type);

        movieDao = new MovieDao(movieDaoConfig, this);
        directorDao = new DirectorDao(directorDaoConfig, this);
        actorDao = new ActorDao(actorDaoConfig, this);
        productionHouseDao = new ProductionHouseDao(productionHouseDaoConfig, this);

        registerDao(Movie.class, movieDao);
        registerDao(Director.class, directorDao);
        registerDao(Actor.class, actorDao);
        registerDao(ProductionHouse.class, productionHouseDao);
    }
    
    public void clear() {
        movieDaoConfig.getIdentityScope().clear();
        directorDaoConfig.getIdentityScope().clear();
        actorDaoConfig.getIdentityScope().clear();
        productionHouseDaoConfig.getIdentityScope().clear();
    }

    public MovieDao getMovieDao() {
        return movieDao;
    }

    public DirectorDao getDirectorDao() {
        return directorDao;
    }

    public ActorDao getActorDao() {
        return actorDao;
    }

    public ProductionHouseDao getProductionHouseDao() {
        return productionHouseDao;
    }

}
